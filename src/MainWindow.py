# Form implementation generated from reading ui file 'ui/main.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets, QtMultimedia, QtMultimediaWidgets
import resource
import random


class Ui_MainWindow(QtWidgets.QMainWindow):
    def __init__(self):
        super().__init__()
        self.setupUi(self)
        self.setupList()

    def setupUi(self, MainWindow: QtWidgets.QMainWindow):
        self.fontID = QtGui.QFontDatabase.addApplicationFont(
            ":/fonts/SimSun.ttf")
        self.fontFamilies = QtGui.QFontDatabase.applicationFontFamilies(
            self.fontID)

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(622, 285)
        MainWindow.setFixedSize(QtCore.QSize(622, 285))
        font = QtGui.QFont()
        font.setFamily(self.fontFamilies[0])
        MainWindow.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/images/icon.ico"),
                       QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.start = QtWidgets.QWidget(parent=self.centralwidget)
        self.start.setGeometry(QtCore.QRect(0, 0, 622, 285))
        self.start.setObjectName("start")
        self.background = QtWidgets.QLabel(parent=self.start)
        self.background.setGeometry(QtCore.QRect(0, 0, 622, 285))
        self.background.setText("")
        self.background.setPixmap(QtGui.QPixmap(":/images/bg.jpg"))
        self.background.setScaledContents(True)
        self.background.setObjectName("background")
        self.one = QtWidgets.QPushButton(parent=self.start)
        self.one.setGeometry(QtCore.QRect(110, 210, 80, 24))
        self.one.setObjectName("one")
        self.one.setFont(font)
        self.ten = QtWidgets.QPushButton(parent=self.start)
        self.ten.setGeometry(QtCore.QRect(430, 210, 80, 24))
        self.ten.setObjectName("ten")
        self.ten.setFont(font)
        self.video = QtMultimediaWidgets.QVideoWidget(
            parent=self.centralwidget)
        self.video.setGeometry(QtCore.QRect(0, 0, 622, 285))
        self.video.setObjectName("video")

        self.media_player = QtMultimedia.QMediaPlayer(self.video)
        self.media_player.setVideoOutput(self.video)
        self.audio_output = QtMultimedia.QAudioOutput()
        self.media_player.setAudioOutput(self.audio_output)

        self.result = QtWidgets.QFrame(parent=self.centralwidget)
        self.result.setGeometry(QtCore.QRect(0, 0, 622, 285))
        self.result.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.result.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.result.setObjectName("result")
        self.closeButton = QtWidgets.QToolButton(parent=self.result)
        self.closeButton.setGeometry(QtCore.QRect(590, 0, 25, 25))
        self.closeButton.setObjectName("closeButton")
        self.setFont(font)
        self.name = QtWidgets.QLabel(parent=self.result)
        self.name.setGeometry(QtCore.QRect(260, 110, 141, 51))
        font = QtGui.QFont()
        font.setFamily(self.fontFamilies[0])
        font.setPointSize(24)
        self.name.setFont(font)
        self.name.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.name.setObjectName("name")
        self.image = QtWidgets.QLabel(parent=self.result)
        self.image.setGeometry(QtCore.QRect(0, 0, 622, 285))
        self.image.setText("")
        self.image.setPixmap(QtGui.QPixmap(":/images/five.jpg"))
        self.image.setScaledContents(True)
        self.image.setObjectName("image")
        MainWindow.setCentralWidget(self.centralwidget)

        self.video.setVisible(False)
        self.result.setVisible(False)

        self.name.raise_()
        self.closeButton.raise_()

        self.one.clicked.connect(self.oneClicked)
        self.ten.clicked.connect(self.tenClicked)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def setupList(self):
        with open("list.txt") as f:
            self.list = f.read().splitlines()

    def oneClosed(self):
        self.start.setVisible(True)
        self.result.setVisible(False)

    def onePlayed(self, status):
        if status == QtMultimedia.QMediaPlayer.MediaStatus.EndOfMedia:
            self.result.setVisible(True)
            self.video.setVisible(False)
            self.name.setText(random.choice(self.list))
            try:
                self.closeButton.clicked.disconnect()
            except:
                pass
            self.closeButton.clicked.connect(self.oneClosed)

    def oneClicked(self):
        self.video.setVisible(True)
        self.start.setVisible(False)
        self.media_player.setSource(QtCore.QUrl("qrc:/videos/one.mp4"))
        try:
            self.media_player.mediaStatusChanged.disconnect()
        except:
            pass
        self.media_player.mediaStatusChanged.connect(self.onePlayed)
        self.media_player.setPosition(0)
        self.media_player.play()

    def tenClosed(self):
        if self.choiceList != []:
            self.name.setText(self.choiceList.pop())
        else:
            self.result.setVisible(False)
            self.start.setVisible(True)

    def tenPlayed(self, status):
        if status == QtMultimedia.QMediaPlayer.MediaStatus.EndOfMedia:
            self.result.setVisible(True)
            self.video.setVisible(False)
            self.choiceList = []
            tmp = self.list.copy()
            while len(self.choiceList) <= 9:
                print(tmp)
                choice = random.choice(tmp)
                tmp.remove(choice)
                self.choiceList.append(choice)
            self.name.setText(self.choiceList.pop())
            try:
                self.closeButton.clicked.disconnect()
            except:
                pass
            self.closeButton.clicked.connect(self.tenClosed)

    def tenClicked(self):
        self.video.setVisible(True)
        self.start.setVisible(False)
        self.media_player.setSource(QtCore.QUrl("qrc:/videos/ten.mp4"))
        try:
            self.media_player.mediaStatusChanged.disconnect()
        except:
            pass
        self.media_player.mediaStatusChanged.connect(self.tenPlayed)
        self.media_player.setPosition(0)
        self.media_player.play()

    def retranslateUi(self, MainWindow: QtWidgets.QMainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "原神抽奖"))
        self.one.setText(_translate("MainWindow", "单抽"))
        self.ten.setText(_translate("MainWindow", "十连抽"))
        self.name.setText(_translate("MainWindow", ""))
        self.closeButton.setText(_translate("MainWindow", "X"))
